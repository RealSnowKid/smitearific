name: End to End Testing and Dockerizing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-info-api:
    name: Build the Info API
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: smitearific_api/info
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2      

      - name: Build the Info API with Maven
        run: mvn -B package --file pom.xml
      - run: mkdir staging && cp /target/*.jar staging
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
        
  build-stats-api:
    name: Build the Stats API
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: smitearific_api/stats
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2      

      - name: Build the Stats API with Maven
        run: mvn -B package --file pom.xml
      - run: mkdir staging && cp /target/*.jar staging
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
  
#   run-backend-with-docker:
#     name: Runs the APIs and Database in a docker container
